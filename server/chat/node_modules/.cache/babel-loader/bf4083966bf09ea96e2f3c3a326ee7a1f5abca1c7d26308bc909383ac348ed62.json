{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\web developing\\\\exercises\\\\3\\\\Chat-Application\\\\chat\\\\src\\\\ChatScreen\\\\ContactsBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Contact from \"./Contact\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContactsBar(_ref) {\n  _s();\n  let {\n    contacts,\n    onContactSelect,\n    onAddContact\n  } = _ref;\n  const [isPopupVisible, setPopupVisible] = useState(false);\n  const [newContactName, setNewContactName] = useState(\"\");\n  const [newProfilePic, setNewProfilePic] = useState(\"\");\n  const overlayRef = useRef(null);\n  const handleAddContact = () => {\n    if (newContactName.trim() === \"\") {\n      return;\n    }\n    const currentTime = new Date().toLocaleString();\n    const newContact = {\n      name: newContactName,\n      picture: newProfilePic || \"profile_pics/NO_PIC.png\",\n      messages: [],\n      timestamp: currentTime\n    };\n    const updatedContacts = contacts ? [...contacts, newContact] : [newContact];\n    setNewContactName(\"\");\n    setNewProfilePic(\"\");\n    setPopupVisible(false);\n    onAddContact(updatedContacts);\n  };\n  const handlePopupToggle = () => {\n    setPopupVisible(!isPopupVisible);\n  };\n  const handleContactClick = clickedContact => {\n    const selectedContact = contacts.find(contact => contact.name === clickedContact.name);\n    onContactSelect(selectedContact);\n  };\n  const handleOverlayClick = () => {\n    if (isPopupVisible) {\n      return;\n    }\n  };\n  useEffect(() => {\n    if (isPopupVisible) {\n      overlayRef.current.addEventListener(\"click\", handleOverlayClick);\n    }\n    return () => {\n      if (overlayRef.current) {\n        overlayRef.current.removeEventListener(\"click\", handleOverlayClick);\n      }\n    };\n  }, [isPopupVisible]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chats_bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat_bar_line1\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"chats_title\",\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"more_icon\",\n        onClick: handlePopupToggle,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chats\",\n      children: [contacts && contacts.map((contact, index) => /*#__PURE__*/_jsxDEV(Contact, {\n        contact: contact,\n        onClick: () => handleContactClick(contact)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)), isPopupVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          ref: overlayRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"popup\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"popup_content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Add a new contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newContactName,\n              onChange: e => setNewContactName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"cancel_button\",\n              onClick: () => setPopupVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"add_button\",\n              onClick: handleAddContact,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ContactsBar, \"T16o0hxrCiBWkFAj3n/D0oj1KHA=\");\n_c = ContactsBar;\nexport default ContactsBar;\nvar _c;\n$RefreshReg$(_c, \"ContactsBar\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Contact","jsxDEV","_jsxDEV","ContactsBar","_ref","_s","contacts","onContactSelect","onAddContact","isPopupVisible","setPopupVisible","newContactName","setNewContactName","newProfilePic","setNewProfilePic","overlayRef","handleAddContact","trim","currentTime","Date","toLocaleString","newContact","name","picture","messages","timestamp","updatedContacts","handlePopupToggle","handleContactClick","clickedContact","selectedContact","find","contact","handleOverlayClick","current","addEventListener","removeEventListener","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","className","ref","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/web developing/exercises/3/Chat-Application/chat/src/ChatScreen/ContactsBar.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport Contact from \"./Contact\";\r\n\r\nfunction ContactsBar({ contacts, onContactSelect, onAddContact }) {\r\n  const [isPopupVisible, setPopupVisible] = useState(false);\r\n  const [newContactName, setNewContactName] = useState(\"\");\r\n  const [newProfilePic, setNewProfilePic] = useState(\"\");\r\n  const overlayRef = useRef(null);\r\n\r\n    const handleAddContact = () => {\r\n        if (newContactName.trim() === \"\") {\r\n        return;\r\n    }\r\n\r\n    const currentTime = new Date().toLocaleString();\r\n    const newContact = {\r\n      name: newContactName,\r\n      picture: newProfilePic || \"profile_pics/NO_PIC.png\",\r\n      messages: [],\r\n      timestamp: currentTime\r\n    };\r\n\r\n    const updatedContacts = contacts ? [...contacts, newContact] : [newContact];\r\n\r\n    setNewContactName(\"\");\r\n    setNewProfilePic(\"\");\r\n    setPopupVisible(false);\r\n    onAddContact(updatedContacts);\r\n  };\r\n\r\n  const handlePopupToggle = () => {\r\n    setPopupVisible(!isPopupVisible);\r\n  };\r\n\r\n  const handleContactClick = (clickedContact) => {\r\n    const selectedContact = contacts.find((contact) => contact.name === clickedContact.name);\r\n    onContactSelect(selectedContact);\r\n  };\r\n\r\n  \r\n\r\n  const handleOverlayClick = () => {\r\n    if (isPopupVisible) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isPopupVisible) {\r\n      overlayRef.current.addEventListener(\"click\", handleOverlayClick);\r\n    }\r\n    return () => {\r\n      if (overlayRef.current) {\r\n        overlayRef.current.removeEventListener(\"click\", handleOverlayClick);\r\n      }\r\n    };\r\n  }, [isPopupVisible]);\r\n\r\n  return (\r\n    <div id=\"chats_bar\">\r\n      <div id=\"chat_bar_line1\">\r\n        <span id=\"chats_title\">Contacts</span>\r\n        <span id=\"more_icon\" onClick={handlePopupToggle}>\r\n          +\r\n        </span>\r\n      </div>\r\n      <div id=\"chats\">\r\n        {contacts &&\r\n         contacts.map((contact, index) => (\r\n            <Contact\r\n            key={index}\r\n            contact={contact}\r\n            onClick={() => handleContactClick(contact)}\r\n\r\n            />\r\n        ))}\r\n        {/* Render the popup if exists */}\r\n        {isPopupVisible && (\r\n          <div>\r\n            <div className=\"overlay\" ref={overlayRef}></div>\r\n            <div id=\"popup\">\r\n              <div id=\"popup_content\">\r\n                <p>Add a new contact</p>\r\n                <span>Name</span>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newContactName}\r\n                  onChange={(e) => setNewContactName(e.target.value)}\r\n                />\r\n                <button id=\"cancel_button\" onClick={() => setPopupVisible(false)}>\r\n                  Cancel\r\n                </button>\r\n                <button id=\"add_button\" onClick={handleAddContact}>\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactsBar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}