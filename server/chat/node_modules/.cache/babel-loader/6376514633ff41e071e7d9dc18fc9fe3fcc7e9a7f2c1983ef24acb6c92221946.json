{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\web developing\\\\exercises\\\\3\\\\part 3\\\\Chat-Application\\\\chat\\\\src\\\\ChatScreen\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ProfilePic from \"./ProfilePic.js\";\nimport ChatButtons from \"./ChatButtons.js\";\nimport Message from \"./Message.js\";\nimport SendMessage from \"./SendMessage.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatBox(_ref) {\n  _s();\n  let {\n    chat,\n    user,\n    selectedContact,\n    setChat,\n    updateChatMessages,\n    handleDeleteChat,\n    updateLastMessage,\n    getMessages\n  } = _ref;\n  const [chatMessages, setChatMessages] = useState([]);\n  const [isChatRemoved, setIsChatRemoved] = useState(false);\n  const messagesContainerRef = useRef(null);\n  const messages = chat ? chat.messages || [] : [];\n  const socket = useRef(null);\n  useEffect(() => {\n    socket.current = new WebSocket(\"ws://localhost:5000\");\n    socket.current.addEventListener(\"open\", () => {\n      console.log(\"WebSocket connection established\");\n    });\n    socket.current.addEventListener(\"message\", event => {\n      const data = JSON.parse(event.data);\n      if (data.event === \"chatModified\") {\n        const updatedChatId = data.data.updatedChat.id;\n        const updatedChatMessages = data.data.updatedChat.messages;\n        setChatMessages(updatedChatMessages);\n        updateChatMessages(updatedChatId, updatedChatMessages);\n      } else if (data.event === \"chatRemoved\") {\n        const removedChatId = data.data.removedChatId;\n        if (chat && chat.id === removedChatId) {\n          setIsChatRemoved(true);\n        }\n      }\n    });\n    return () => {\n      socket.current.close();\n    };\n  }, []);\n  useEffect(() => {\n    if (chat && !isChatRemoved) {\n      getMessages(chat).then(data => {\n        setChatMessages(data);\n      });\n    }\n  }, [chat, isChatRemoved]);\n\n  // ... rest of the code\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chat_window\",\n    children: [selectedContact && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ProfilePic, {\n        pic: selectedContact.profilePic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"username\",\n        children: selectedContact.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ChatButtons, {\n      chat: chat,\n      handleDeleteChat: handleDeleteChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"messages\",\n      ref: messagesContainerRef,\n      children: isChatRemoved ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Chat has been removed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : messages.slice().reverse().map((message, index) => {\n        const incoming = message.sender.username === user.username ? 0 : 1;\n        return /*#__PURE__*/_jsxDEV(Message, {\n          text: message.content,\n          dateAndTime: message.created,\n          incoming: incoming\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SendMessage, {\n      onSendMessage: handleSendMessage,\n      selectedContact: selectedContact ? selectedContact.username : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"sqqBFSdUaubCzM9ZT5IFgfqwI+Y=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ProfilePic","ChatButtons","Message","SendMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBox","_ref","_s","chat","user","selectedContact","setChat","updateChatMessages","handleDeleteChat","updateLastMessage","getMessages","chatMessages","setChatMessages","isChatRemoved","setIsChatRemoved","messagesContainerRef","messages","socket","current","WebSocket","addEventListener","console","log","event","data","JSON","parse","updatedChatId","updatedChat","id","updatedChatMessages","removedChatId","close","then","children","pic","profilePic","fileName","_jsxFileName","lineNumber","columnNumber","className","displayName","ref","slice","reverse","map","message","index","incoming","sender","username","text","content","dateAndTime","created","onSendMessage","handleSendMessage","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/web developing/exercises/3/part 3/Chat-Application/chat/src/ChatScreen/ChatBox.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport ProfilePic from \"./ProfilePic.js\";\r\nimport ChatButtons from \"./ChatButtons.js\";\r\nimport Message from \"./Message.js\";\r\nimport SendMessage from \"./SendMessage.js\";\r\n\r\nfunction ChatBox({ chat, user, selectedContact, setChat, updateChatMessages, handleDeleteChat, updateLastMessage, getMessages }) {\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [isChatRemoved, setIsChatRemoved] = useState(false);\r\n  const messagesContainerRef = useRef(null);\r\n  const messages = chat ? chat.messages || [] : [];\r\n  const socket = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.current = new WebSocket(\"ws://localhost:5000\");\r\n\r\n    socket.current.addEventListener(\"open\", () => {\r\n      console.log(\"WebSocket connection established\");\r\n    });\r\n\r\n    socket.current.addEventListener(\"message\", (event) => {\r\n      const data = JSON.parse(event.data);\r\n      if (data.event === \"chatModified\") {\r\n        const updatedChatId = data.data.updatedChat.id;\r\n        const updatedChatMessages = data.data.updatedChat.messages;\r\n        setChatMessages(updatedChatMessages);\r\n        updateChatMessages(updatedChatId, updatedChatMessages);\r\n      } else if (data.event === \"chatRemoved\") {\r\n        const removedChatId = data.data.removedChatId;\r\n        if (chat && chat.id === removedChatId) {\r\n          setIsChatRemoved(true);\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.current.close();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (chat && !isChatRemoved) {\r\n      getMessages(chat)\r\n        .then((data) => {\r\n          setChatMessages(data);\r\n        })\r\n    }\r\n  }, [chat, isChatRemoved]);\r\n\r\n  // ... rest of the code\r\n\r\n  return (\r\n    <div id=\"chat_window\">\r\n      {selectedContact && (\r\n        <>\r\n          <ProfilePic pic={selectedContact.profilePic}/>\r\n          <span className=\"username\">{selectedContact.displayName}</span>\r\n        </>\r\n      )}\r\n      <ChatButtons chat={chat} handleDeleteChat={handleDeleteChat}/>\r\n      <div id=\"messages\" ref={messagesContainerRef}>\r\n        {isChatRemoved ? (\r\n          <div>Chat has been removed.</div>\r\n        ) : (\r\n          messages.slice().reverse().map((message, index) => {\r\n            const incoming = message.sender.username === user.username ? 0 : 1;\r\n            return (\r\n              <Message\r\n                key={index}\r\n                text={message.content}\r\n                dateAndTime={message.created}\r\n                incoming={incoming}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n      <SendMessage\r\n        onSendMessage={handleSendMessage}\r\n        selectedContact={selectedContact ? selectedContact.username : null}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}