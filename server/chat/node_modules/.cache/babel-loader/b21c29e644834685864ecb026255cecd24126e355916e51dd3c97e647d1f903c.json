{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\web developing\\\\exercises\\\\3\\\\part 3\\\\Chat-Application\\\\chat\\\\src\\\\ChatScreen\\\\ContactsBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Contact from \"./Contact.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContactsBar(_ref) {\n  _s();\n  let {\n    user,\n    onChatSelect,\n    onAddChat,\n    fetchedChats,\n    setFetchedChats,\n    getMessages\n  } = _ref;\n  const [isPopupVisible, setPopupVisible] = useState(false);\n  const [newContactName, setNewContactName] = useState(\"\");\n  const overlayRef = useRef(null);\n  const socket = useRef(null);\n  const addChatTriggered = useRef(false);\n  useEffect(() => {\n    socket.current = new WebSocket(\"ws://localhost:5000\");\n    socket.current.addEventListener(\"open\", () => {\n      console.log(\"WebSocket connection established\");\n    });\n    socket.current.addEventListener(\"message\", event => {\n      const data = JSON.parse(event.data);\n      if (data.event === \"chatAdded\" && !addChatTriggered.current) {\n        const existingChat = fetchedChats.find(chat => chat.id === data.id);\n        if (existingChat) {\n          return;\n        }\n        const chat = data.data.chat;\n        const otherUser = chat.users.find(u => u.username !== user);\n        const newChat = {\n          id: chat.id,\n          user: {\n            username: otherUser.username,\n            displayName: otherUser.displayName,\n            profilePic: otherUser.profilePic\n          },\n          lastMessage: null\n        };\n        setFetchedChats(prevChats => [...prevChats, newChat]);\n        onAddChat(newChat);\n      } else if (data.event === \"chatRemoved\" || data.event === \"chatModified\") {\n        getChats();\n      }\n    });\n    return () => {\n      socket.current.close();\n    };\n  }, []);\n  useEffect(() => {\n    getChats();\n  }, []);\n  async function getLastMessage(chat) {\n    const messages = await getMessages(chat);\n    if (messages && messages.length > 0) {\n      messages.sort((a, b) => b.id - a.id);\n      return messages[0];\n    }\n    return null;\n  }\n  async function handleAddChat() {\n    addChatTriggered.current = true;\n    const contact = {\n      username: newContactName\n    };\n    const res = await fetch('http://localhost:5000/api/Chats', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      },\n      'body': JSON.stringify(contact)\n    });\n    if (res.status != 200) {\n      const errorMessage = await res.text();\n      alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\n    } else {\n      const data = await res.json();\n      const lastMessage = await getLastMessage(data);\n      const newChat = {\n        id: data.id,\n        user: {\n          \"username\": data.user.username,\n          \"displayName\": data.user.displayName,\n          \"profilePic\": data.user.profilePic\n        },\n        lastMessage: lastMessage\n      };\n      setPopupVisible(false);\n      setFetchedChats(prevChats => [...prevChats, newChat]);\n      onAddChat(newChat);\n    }\n    ;\n    addChatTriggered.current = false;\n  }\n  async function handleChatClick(clickedChat) {\n    const id = clickedChat.id;\n    const res = await fetch(`http://localhost:5000/api/Chats/${id}`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    if (res.status != 200) {\n      const errorMessage = await res.text();\n      alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\n    } else {\n      const data = await res.json();\n      onChatSelect(data);\n    }\n  }\n  const handlePopupToggle = () => {\n    setPopupVisible(!isPopupVisible);\n  };\n  const handleOverlayClick = () => {\n    if (isPopupVisible) {\n      return;\n    }\n  };\n  useEffect(() => {\n    if (isPopupVisible) {\n      overlayRef.current.addEventListener(\"click\", handleOverlayClick);\n    }\n    return () => {\n      if (overlayRef.current) {\n        overlayRef.current.removeEventListener(\"click\", handleOverlayClick);\n      }\n    };\n  }, [isPopupVisible]);\n  async function getChats() {\n    try {\n      const res = await fetch('http://localhost:5000/api/Chats', {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${user.token}`\n        }\n      });\n      if (res.status != 200) {\n        const errorMessage = await res.text();\n        alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\n      } else {\n        const data = await res.json();\n        const updatedChats = [];\n        for (const chat of data) {\n          const lastMessage = chat.lastMessage;\n          const updatedChat = {\n            ...chat,\n            lastMessage: lastMessage\n          };\n          updatedChats.push(updatedChat);\n        }\n        setFetchedChats(updatedChats);\n        return data;\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chats_bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat_bar_line1\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"chats_title\",\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"more_icon\",\n        onClick: handlePopupToggle,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chats\",\n      children: [fetchedChats && fetchedChats.map(chat => /*#__PURE__*/_jsxDEV(Contact, {\n        chat: chat,\n        onClick: () => handleChatClick(chat)\n      }, chat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this)), isPopupVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          ref: overlayRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"popup\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"popup_content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Add a new contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newContactName,\n              onChange: e => setNewContactName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"cancel_button\",\n              onClick: () => setPopupVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"add_button\",\n              onClick: handleAddChat,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(ContactsBar, \"lkpDOfxlPJ3k8eSgL8vzvtI+Z2E=\");\n_c = ContactsBar;\nexport default ContactsBar;\nvar _c;\n$RefreshReg$(_c, \"ContactsBar\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Contact","jsxDEV","_jsxDEV","ContactsBar","_ref","_s","user","onChatSelect","onAddChat","fetchedChats","setFetchedChats","getMessages","isPopupVisible","setPopupVisible","newContactName","setNewContactName","overlayRef","socket","addChatTriggered","current","WebSocket","addEventListener","console","log","event","data","JSON","parse","existingChat","find","chat","id","otherUser","users","u","username","newChat","displayName","profilePic","lastMessage","prevChats","getChats","close","getLastMessage","messages","length","sort","a","b","handleAddChat","contact","res","fetch","method","headers","token","stringify","status","errorMessage","text","alert","statusText","json","handleChatClick","clickedChat","handlePopupToggle","handleOverlayClick","removeEventListener","updatedChats","updatedChat","push","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","className","ref","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/web developing/exercises/3/part 3/Chat-Application/chat/src/ChatScreen/ContactsBar.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport Contact from \"./Contact.js\";\r\n\r\nfunction ContactsBar({ user, onChatSelect, onAddChat, fetchedChats, setFetchedChats, getMessages }) {\r\n  const [isPopupVisible, setPopupVisible] = useState(false);\r\n  const [newContactName, setNewContactName] = useState(\"\");\r\n  const overlayRef = useRef(null);\r\n  const socket = useRef(null);\r\n  const addChatTriggered = useRef(false);\r\n\r\n\r\n  useEffect(() => {\r\n    socket.current = new WebSocket(\"ws://localhost:5000\");\r\n\r\n    socket.current.addEventListener(\"open\", () => {\r\n      console.log(\"WebSocket connection established\");\r\n    });\r\n\r\n    socket.current.addEventListener(\"message\", (event) => {\r\n      const data = JSON.parse(event.data);\r\n      if (data.event === \"chatAdded\" && !addChatTriggered.current) {\r\n        const existingChat = fetchedChats.find((chat) => chat.id === data.id);\r\n        if (existingChat) {\r\n          return;\r\n        }\r\n        const chat = data.data.chat;\r\n        const otherUser = chat.users.find((u) => u.username !== user);\r\n        const newChat = {\r\n          id: chat.id,\r\n          user: {\r\n            username: otherUser.username,\r\n            displayName: otherUser.displayName,\r\n            profilePic: otherUser.profilePic\r\n          },\r\n          lastMessage: null\r\n        };\r\n\r\n        setFetchedChats((prevChats) => [...prevChats, newChat]);\r\n        onAddChat(newChat);\r\n      }else if(data.event === \"chatRemoved\" || data.event === \"chatModified\"){\r\n        getChats();\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.current.close();\r\n    };\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    getChats();\r\n  }, []);\r\n\r\n  async function getLastMessage(chat) {\r\n    const messages = await getMessages(chat);\r\n    if (messages && messages.length > 0) {\r\n      messages.sort((a, b) => b.id - a.id);\r\n      return messages[0];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  async function handleAddChat() {\r\n  addChatTriggered.current = true;\r\n  const contact = { username: newContactName };\r\n    const res = await fetch('http://localhost:5000/api/Chats', {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${user.token}`\r\n      },\r\n      'body': JSON.stringify(contact)\r\n    });\r\n    if (res.status != 200){\r\n      const errorMessage = await res.text();\r\n      alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\r\n    } else {\r\n      const data = await res.json();\r\n      const lastMessage = await getLastMessage(data);\r\n\r\n      const newChat = {\r\n        id: data.id,\r\n        user:\r\n        {\r\n          \"username\": data.user.username,\r\n          \"displayName\": data.user.displayName,\r\n          \"profilePic\": data.user.profilePic\r\n        },\r\n        lastMessage: lastMessage\r\n      }\r\n      setPopupVisible(false);\r\n      setFetchedChats((prevChats) => [...prevChats, newChat]);\r\n      onAddChat(newChat);\r\n    };\r\n    addChatTriggered.current = false;\r\n  }\r\n\r\n  async function handleChatClick(clickedChat) {\r\n    const id = clickedChat.id;\r\n    const res = await fetch(`http://localhost:5000/api/Chats/${id}`, {\r\n      method: 'get',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${user.token}`\r\n      },\r\n    });\r\n    if (res.status != 200){\r\n      const errorMessage = await res.text();\r\n      alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\r\n    } else {\r\n      const data = await res.json();\r\n      onChatSelect(data);\r\n    }\r\n  }\r\n\r\n  const handlePopupToggle = () => {\r\n    setPopupVisible(!isPopupVisible);\r\n  };\r\n\r\n  const handleOverlayClick = () => {\r\n    if (isPopupVisible) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isPopupVisible) {\r\n      overlayRef.current.addEventListener(\"click\", handleOverlayClick);\r\n    }\r\n    return () => {\r\n      if (overlayRef.current) {\r\n        overlayRef.current.removeEventListener(\"click\", handleOverlayClick);\r\n      }\r\n    };\r\n  }, [isPopupVisible]);\r\n\r\n  async function getChats() {\r\n    try {\r\n        const res = await fetch('http://localhost:5000/api/Chats', {\r\n        method: 'get',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${user.token}`\r\n        },\r\n      });\r\n      if (res.status != 200){\r\n        const errorMessage = await res.text();\r\n        alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\r\n      } else {\r\n        const data = await res.json();\r\n        const updatedChats = [];\r\n        for (const chat of data) {\r\n          const lastMessage = chat.lastMessage;\r\n          const updatedChat = {\r\n            ...chat,\r\n            lastMessage: lastMessage,\r\n          };\r\n          updatedChats.push(updatedChat);\r\n        }\r\n        setFetchedChats(updatedChats);\r\n        return data;\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  }\r\n  \r\n\r\n  \r\n  return (\r\n    <div id=\"chats_bar\">\r\n      <div id=\"chat_bar_line1\">\r\n        <span id=\"chats_title\">Contacts</span>\r\n        <span id=\"more_icon\" onClick={handlePopupToggle}>\r\n          +\r\n        </span>\r\n      </div>\r\n      <div id=\"chats\">\r\n        {fetchedChats &&\r\n         fetchedChats.map((chat) => (\r\n            <Contact\r\n            key={chat.id}\r\n            chat={chat}\r\n            onClick={() => handleChatClick(chat)}\r\n\r\n            />\r\n        ))}\r\n        {/* Render the popup if exists */}\r\n        {isPopupVisible && (\r\n          <div>\r\n            <div className=\"overlay\" ref={overlayRef}></div>\r\n            <div id=\"popup\">\r\n              <div id=\"popup_content\">\r\n                <p>Add a new contact</p>\r\n                <span>Name</span>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newContactName}\r\n                  onChange={(e) => setNewContactName(e.target.value)}\r\n                />\r\n                <button id=\"cancel_button\" onClick={() => setPopupVisible(false)}>\r\n                  Cancel\r\n                </button>\r\n                <button id=\"add_button\" onClick={handleAddChat}>\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactsBar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}