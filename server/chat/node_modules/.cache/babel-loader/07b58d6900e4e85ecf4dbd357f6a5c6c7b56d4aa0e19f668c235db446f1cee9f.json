{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\web developing\\\\exercises\\\\3\\\\part 3\\\\Chat-Application\\\\chat\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport './Chat.css';\nimport LeftBar from './ChatScreen/LeftBar.js';\nimport ContactsBar from './ChatScreen/ContactsBar.js';\nimport ChatBox from './ChatScreen/ChatBox.js';\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat(_ref) {\n  _s();\n  let {\n    curUser,\n    setChats,\n    msgIdCounter,\n    refresh\n  } = _ref;\n  const [curChat, setCurChat] = useState(null);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [fetchedChats, setFetchedChats] = useState([]);\n  const navigate = useNavigate();\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = new WebSocket('ws://localhost:5000');\n    setSocket(newSocket);\n    if (newSocket) {\n      newSocket.addEventListener('message', event => {\n        const data = JSON.parse(event.data);\n        if (data.event === 'chatRemoved') {\n          refresh();\n        }\n      });\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, []);\n  const handleContactSelect = chat => {\n    setCurChat(chat);\n    const contact = curUser.username === chat.users[0].username ? chat.users[1] : chat.users[0];\n    setSelectedContact(contact);\n  };\n  const handleAddChat = newChat => {\n    setChats(prevChats => [...prevChats, newChat]);\n  };\n  const updateChatMessages = (chatId, updatedMessages) => {\n    setChats(prevChats => prevChats.map(chat => {\n      if (chat.id === chatId) {\n        chat.messages = updatedMessages;\n      }\n      return chat;\n    }));\n  };\n  function handleLogOut(event) {\n    event.preventDefault();\n    curUser.registered = \"no\";\n    navigate('/login');\n  }\n  async function handleDeleteChat(chat) {\n    const id = chat.id;\n    const res = await fetch(`http://localhost:5000/api/Chats/${id}`, {\n      method: 'delete',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${curUser.token}`\n      }\n    });\n    if (res.status != 204) {\n      const errorMessage = await res.text();\n      alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\n    } else {\n      setFetchedChats(prevChats => prevChats.filter(c => c.id !== id));\n      setSelectedContact(null);\n    }\n  }\n  async function updateLastMessage(updatedChat) {\n    const updatedChats = fetchedChats.map(chat => {\n      if (chat.id === updatedChat.id) {\n        return {\n          ...chat,\n          lastMessage: updatedChat.lastMessage\n        };\n      }\n      return chat;\n    });\n    setFetchedChats(updatedChats);\n  }\n  async function getMessages(chat) {\n    const id = chat.id;\n    const res = await fetch(`http://localhost:5000/api/Chats/${id}/Messages`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${curUser.token}`\n      }\n    });\n    if (res.status != 200) {\n      const errorMessage = await res.text();\n      alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\n    } else {\n      const data = await res.json();\n      return data;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LeftBar, {\n      user: curUser,\n      handleLogOut: handleLogOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactsBar, {\n      user: curUser,\n      onChatSelect: handleContactSelect,\n      onAddChat: handleAddChat,\n      fetchedChats: fetchedChats,\n      setFetchedChats: setFetchedChats,\n      getMessages: getMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      chat: curChat,\n      user: curUser,\n      selectedContact: selectedContact,\n      setSelectedContact: setSelectedContact,\n      setChat: setCurChat,\n      updateChatMessages: updateChatMessages,\n      msgIdCounter: msgIdCounter,\n      handleDeleteChat: handleDeleteChat,\n      updateLastMessage: updateLastMessage,\n      getMessages: getMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Chat, \"7RjQgzlmLmwswAiQ6/IP41BgX4U=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["LeftBar","ContactsBar","ChatBox","React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_ref","_s","curUser","setChats","msgIdCounter","refresh","curChat","setCurChat","selectedContact","setSelectedContact","fetchedChats","setFetchedChats","navigate","socket","setSocket","newSocket","WebSocket","addEventListener","event","data","JSON","parse","close","handleContactSelect","chat","contact","username","users","handleAddChat","newChat","prevChats","updateChatMessages","chatId","updatedMessages","map","id","messages","handleLogOut","preventDefault","registered","handleDeleteChat","res","fetch","method","headers","token","status","errorMessage","text","alert","statusText","filter","c","updateLastMessage","updatedChat","updatedChats","lastMessage","getMessages","json","children","fileName","_jsxFileName","lineNumber","columnNumber","user","onChatSelect","onAddChat","setChat","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/web developing/exercises/3/part 3/Chat-Application/chat/src/Chat.js"],"sourcesContent":["import './Chat.css';\r\nimport LeftBar from './ChatScreen/LeftBar.js';\r\nimport ContactsBar from './ChatScreen/ContactsBar.js';\r\nimport ChatBox from './ChatScreen/ChatBox.js';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction Chat({ curUser, setChats, msgIdCounter,refresh}) {\r\n  const [curChat, setCurChat] = useState(null);\r\n  const [selectedContact, setSelectedContact] = useState(null);\r\n  const [fetchedChats, setFetchedChats] = useState([]);\r\n  const navigate = useNavigate();\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const newSocket = new WebSocket('ws://localhost:5000'); \r\n    setSocket(newSocket);\r\n\r\n    if (newSocket) {\r\n      newSocket.addEventListener('message', (event) => {\r\n        const data = JSON.parse(event.data);\r\n        if (data.event === 'chatRemoved') {\r\n          refresh();\r\n        }\r\n      });\r\n\r\n      return () => {\r\n        newSocket.close();\r\n      };\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleContactSelect = (chat) => {\r\n    setCurChat(chat);\r\n    const contact = curUser.username === chat.users[0].username ?\r\n    chat.users[1] : chat.users[0];\r\n    setSelectedContact(contact);\r\n  };\r\n\r\n  const handleAddChat = (newChat) => {\r\n    setChats((prevChats) => [...prevChats, newChat]);\r\n  };\r\n\r\n  const updateChatMessages = (chatId, updatedMessages) => {\r\n    setChats((prevChats) =>\r\n    prevChats.map((chat) => {\r\n        if (chat.id === chatId) {\r\n          chat.messages = updatedMessages;\r\n        }\r\n        return chat;\r\n      })\r\n    );\r\n  };\r\n\r\n  function handleLogOut(event) {\r\n    event.preventDefault();\r\n    curUser.registered = \"no\"\r\n    navigate('/login');\r\n  }\r\n\r\n  async function handleDeleteChat(chat) {\r\n    const id = chat.id\r\n    const res = await fetch(`http://localhost:5000/api/Chats/${id}`, {\r\n      method: 'delete',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${curUser.token}`\r\n      },\r\n    });\r\n    if (res.status != 204){\r\n      const errorMessage = await res.text();\r\n      alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\r\n    } else {\r\n      setFetchedChats(prevChats => prevChats.filter(c => c.id !== id));\r\n      setSelectedContact(null);\r\n    }\r\n  }\r\n\r\n  async function updateLastMessage(updatedChat) {\r\n    const updatedChats = fetchedChats.map((chat) => {\r\n      if (chat.id === updatedChat.id) {\r\n        return {\r\n          ...chat,\r\n          lastMessage: updatedChat.lastMessage,\r\n        };\r\n      }\r\n      return chat;\r\n    });\r\n    setFetchedChats(updatedChats);\r\n  }\r\n\r\n  async function getMessages(chat) {\r\n    const id = chat.id;\r\n    const res = await fetch(`http://localhost:5000/api/Chats/${id}/Messages`, {\r\n      method: 'get',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${curUser.token}`\r\n      },\r\n    });\r\n    if (res.status != 200){\r\n      const errorMessage = await res.text();\r\n      alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\r\n    } else {\r\n      const data = await res.json();\r\n      return(data);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"background\"></div>\r\n      <LeftBar user={curUser} handleLogOut={handleLogOut}/>\r\n      <ContactsBar user={curUser}\r\n                   onChatSelect={handleContactSelect} onAddChat={handleAddChat}\r\n                   fetchedChats={fetchedChats} setFetchedChats={setFetchedChats}\r\n                   getMessages={getMessages}/>\r\n      <ChatBox chat={curChat} user={curUser} selectedContact={selectedContact}\r\n               setSelectedContact={setSelectedContact} setChat={setCurChat} \r\n               updateChatMessages={updateChatMessages} msgIdCounter={msgIdCounter}\r\n               handleDeleteChat={handleDeleteChat} updateLastMessage={updateLastMessage}\r\n               getMessages={getMessages}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGrD,SAASC,IAAIA,CAAAC,IAAA,EAA6C;EAAAC,EAAA;EAAA,IAA5C;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,YAAY;IAACC;EAAO,CAAC,GAAAL,IAAA;EACtD,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMqB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMuB,SAAS,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IACtDF,SAAS,CAACC,SAAS,CAAC;IAEpB,IAAIA,SAAS,EAAE;MACbA,SAAS,CAACE,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAK;QAC/C,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;QACnC,IAAIA,IAAI,CAACD,KAAK,KAAK,aAAa,EAAE;UAChCb,OAAO,CAAC,CAAC;QACX;MACF,CAAC,CAAC;MAEF,OAAO,MAAM;QACXU,SAAS,CAACO,KAAK,CAAC,CAAC;MACnB,CAAC;IACH;EACF,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMC,mBAAmB,GAAIC,IAAI,IAAK;IACpCjB,UAAU,CAACiB,IAAI,CAAC;IAChB,MAAMC,OAAO,GAAGvB,OAAO,CAACwB,QAAQ,KAAKF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAACD,QAAQ,GAC3DF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,GAAGH,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC;IAC7BlB,kBAAkB,CAACgB,OAAO,CAAC;EAC7B,CAAC;EAED,MAAMG,aAAa,GAAIC,OAAO,IAAK;IACjC1B,QAAQ,CAAE2B,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC;EAClD,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAACC,MAAM,EAAEC,eAAe,KAAK;IACtD9B,QAAQ,CAAE2B,SAAS,IACnBA,SAAS,CAACI,GAAG,CAAEV,IAAI,IAAK;MACpB,IAAIA,IAAI,CAACW,EAAE,KAAKH,MAAM,EAAE;QACtBR,IAAI,CAACY,QAAQ,GAAGH,eAAe;MACjC;MACA,OAAOT,IAAI;IACb,CAAC,CACH,CAAC;EACH,CAAC;EAED,SAASa,YAAYA,CAACnB,KAAK,EAAE;IAC3BA,KAAK,CAACoB,cAAc,CAAC,CAAC;IACtBpC,OAAO,CAACqC,UAAU,GAAG,IAAI;IACzB3B,QAAQ,CAAC,QAAQ,CAAC;EACpB;EAEA,eAAe4B,gBAAgBA,CAAChB,IAAI,EAAE;IACpC,MAAMW,EAAE,GAAGX,IAAI,CAACW,EAAE;IAClB,MAAMM,GAAG,GAAG,MAAMC,KAAK,CAAE,mCAAkCP,EAAG,EAAC,EAAE;MAC/DQ,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAAS1C,OAAO,CAAC2C,KAAM;MAC3C;IACF,CAAC,CAAC;IACF,IAAIJ,GAAG,CAACK,MAAM,IAAI,GAAG,EAAC;MACpB,MAAMC,YAAY,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;MACrCC,KAAK,CAACR,GAAG,CAACK,MAAM,GAAG,GAAG,GAAGL,GAAG,CAACS,UAAU,GAAG,IAAI,GAAGH,YAAY,CAAC;IAChE,CAAC,MAAM;MACLpC,eAAe,CAACmB,SAAS,IAAIA,SAAS,CAACqB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACjB,EAAE,KAAKA,EAAE,CAAC,CAAC;MAChE1B,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF;EAEA,eAAe4C,iBAAiBA,CAACC,WAAW,EAAE;IAC5C,MAAMC,YAAY,GAAG7C,YAAY,CAACwB,GAAG,CAAEV,IAAI,IAAK;MAC9C,IAAIA,IAAI,CAACW,EAAE,KAAKmB,WAAW,CAACnB,EAAE,EAAE;QAC9B,OAAO;UACL,GAAGX,IAAI;UACPgC,WAAW,EAAEF,WAAW,CAACE;QAC3B,CAAC;MACH;MACA,OAAOhC,IAAI;IACb,CAAC,CAAC;IACFb,eAAe,CAAC4C,YAAY,CAAC;EAC/B;EAEA,eAAeE,WAAWA,CAACjC,IAAI,EAAE;IAC/B,MAAMW,EAAE,GAAGX,IAAI,CAACW,EAAE;IAClB,MAAMM,GAAG,GAAG,MAAMC,KAAK,CAAE,mCAAkCP,EAAG,WAAU,EAAE;MACxEQ,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAAS1C,OAAO,CAAC2C,KAAM;MAC3C;IACF,CAAC,CAAC;IACF,IAAIJ,GAAG,CAACK,MAAM,IAAI,GAAG,EAAC;MACpB,MAAMC,YAAY,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;MACrCC,KAAK,CAACR,GAAG,CAACK,MAAM,GAAG,GAAG,GAAGL,GAAG,CAACS,UAAU,GAAG,IAAI,GAAGH,YAAY,CAAC;IAChE,CAAC,MAAM;MACL,MAAM5B,IAAI,GAAG,MAAMsB,GAAG,CAACiB,IAAI,CAAC,CAAC;MAC7B,OAAOvC,IAAI;IACb;EACF;EAEA,oBACEvB,OAAA,CAAAE,SAAA;IAAA6D,QAAA,gBACE/D,OAAA;MAAKuC,EAAE,EAAC;IAAY;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3BnE,OAAA,CAACT,OAAO;MAAC6E,IAAI,EAAE9D,OAAQ;MAACmC,YAAY,EAAEA;IAAa;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrDnE,OAAA,CAACR,WAAW;MAAC4E,IAAI,EAAE9D,OAAQ;MACd+D,YAAY,EAAE1C,mBAAoB;MAAC2C,SAAS,EAAEtC,aAAc;MAC5DlB,YAAY,EAAEA,YAAa;MAACC,eAAe,EAAEA,eAAgB;MAC7D8C,WAAW,EAAEA;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACxCnE,OAAA,CAACP,OAAO;MAACmC,IAAI,EAAElB,OAAQ;MAAC0D,IAAI,EAAE9D,OAAQ;MAACM,eAAe,EAAEA,eAAgB;MAC/DC,kBAAkB,EAAEA,kBAAmB;MAAC0D,OAAO,EAAE5D,UAAW;MAC5DwB,kBAAkB,EAAEA,kBAAmB;MAAC3B,YAAY,EAAEA,YAAa;MACnEoC,gBAAgB,EAAEA,gBAAiB;MAACa,iBAAiB,EAAEA,iBAAkB;MACzEI,WAAW,EAAEA;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACpC,CAAC;AAEP;AAAC9D,EAAA,CAtHQF,IAAI;EAAA,QAIML,WAAW;AAAA;AAAA0E,EAAA,GAJrBrE,IAAI;AAwHb,eAAeA,IAAI;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}