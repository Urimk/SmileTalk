{"ast":null,"code":"var _jsxFileName = \"/home/uri/\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/Ex2/Chat-Application/chat/src/ChatScreen/ContactsBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Contact from \"./Contact.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContactsBar(_ref) {\n  _s();\n  let {\n    user,\n    onChatSelect,\n    onAddChat,\n    fetchedChats,\n    setFetchedChats\n  } = _ref;\n  const [isPopupVisible, setPopupVisible] = useState(false);\n  const [newContactName, setNewContactName] = useState(\"\");\n  const overlayRef = useRef(null);\n  useEffect(() => {\n    getChats();\n  }, []);\n  async function handleAddChat() {\n    const contact = {\n      username: newContactName\n    };\n    const res = await fetch('http://localhost:5000/api/Chats', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      },\n      'body': JSON.stringify(contact)\n    });\n    if (res.status != 200) {\n      const errorMessage = await res.text();\n      alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\n    } else {\n      const data = await res.json();\n      const newChat = {\n        id: data.id,\n        user: {\n          \"username\": data.user.username,\n          \"displayName\": data.user.displayName,\n          \"profilePic\": data.user.profilePic\n        },\n        lastMessage: null\n      };\n      setPopupVisible(false);\n      setFetchedChats(prevChats => [...prevChats, newChat]);\n      onAddChat(newChat);\n    }\n    ;\n  }\n  async function handleChatClick(clickedChat) {\n    const id = clickedChat.id;\n    const res = await fetch(`http://localhost:5000/api/Chats/${id}`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    if (res.status != 200) {\n      const errorMessage = await res.text();\n      alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\n    } else {\n      const data = await res.json();\n      onChatSelect(data);\n    }\n  }\n  const handlePopupToggle = () => {\n    setPopupVisible(!isPopupVisible);\n  };\n  const handleOverlayClick = () => {\n    if (isPopupVisible) {\n      return;\n    }\n  };\n  useEffect(() => {\n    if (isPopupVisible) {\n      overlayRef.current.addEventListener(\"click\", handleOverlayClick);\n    }\n    return () => {\n      if (overlayRef.current) {\n        overlayRef.current.removeEventListener(\"click\", handleOverlayClick);\n      }\n    };\n  }, [isPopupVisible]);\n  async function getChats() {\n    try {\n      const res = await fetch('http://localhost:5000/api/Chats', {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${user.token}`\n        }\n      });\n      if (res.status != 200) {\n        const errorMessage = await res.text();\n        alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\n      } else {\n        const data = await res.json();\n        const updatedChats = data.map(chat => ({\n          ...chat,\n          lastMessage: chat.messages && chat.messages.length > 0 ? chat.messages[chat.messages.length - 1] : null\n        }));\n        setFetchedChats(updatedChats);\n        return data;\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chats_bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat_bar_line1\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"chats_title\",\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"more_icon\",\n        onClick: handlePopupToggle,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chats\",\n      children: [fetchedChats && fetchedChats.map(chat => /*#__PURE__*/_jsxDEV(Contact, {\n        chat: chat,\n        onClick: () => handleChatClick(chat)\n      }, chat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)), isPopupVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          ref: overlayRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"popup\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"popup_content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Add a new contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newContactName,\n              onChange: e => setNewContactName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"cancel_button\",\n              onClick: () => setPopupVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"add_button\",\n              onClick: handleAddChat,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(ContactsBar, \"L59jSV3nefkzuMLP+7q05GH2oDQ=\");\n_c = ContactsBar;\nexport default ContactsBar;\nvar _c;\n$RefreshReg$(_c, \"ContactsBar\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Contact","jsxDEV","_jsxDEV","ContactsBar","_ref","_s","user","onChatSelect","onAddChat","fetchedChats","setFetchedChats","isPopupVisible","setPopupVisible","newContactName","setNewContactName","overlayRef","getChats","handleAddChat","contact","username","res","fetch","method","headers","token","JSON","stringify","status","errorMessage","text","alert","statusText","data","json","newChat","id","displayName","profilePic","lastMessage","prevChats","handleChatClick","clickedChat","handlePopupToggle","handleOverlayClick","current","addEventListener","removeEventListener","updatedChats","map","chat","messages","length","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","ref","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/uri/שולחן העבודה/Ex2/Chat-Application/chat/src/ChatScreen/ContactsBar.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport Contact from \"./Contact.js\";\n\nfunction ContactsBar({ user, onChatSelect, onAddChat, fetchedChats, setFetchedChats }) {\n  const [isPopupVisible, setPopupVisible] = useState(false);\n  const [newContactName, setNewContactName] = useState(\"\");\n  const overlayRef = useRef(null);\n\n  useEffect(() => {\n    getChats();\n  }, []);\n\n  async function handleAddChat() {\n  const contact = { username: newContactName };\n    const res = await fetch('http://localhost:5000/api/Chats', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      },\n      'body': JSON.stringify(contact)\n    });\n    if (res.status != 200){\n      const errorMessage = await res.text();\n      alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\n    } else {\n      const data = await res.json();\n      const newChat = {\n        id: data.id,\n        user:\n        {\n          \"username\": data.user.username,\n          \"displayName\": data.user.displayName,\n          \"profilePic\": data.user.profilePic\n        },\n        lastMessage: null\n      }\n      setPopupVisible(false);\n      setFetchedChats((prevChats) => [...prevChats, newChat]);\n      onAddChat(newChat);\n    };\n  }\n\n  async function handleChatClick(clickedChat) {\n    const id = clickedChat.id;\n    const res = await fetch(`http://localhost:5000/api/Chats/${id}`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      },\n    });\n    if (res.status != 200){\n      const errorMessage = await res.text();\n      alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\n    } else {\n      const data = await res.json();\n      onChatSelect(data);\n    }\n  }\n\n  const handlePopupToggle = () => {\n    setPopupVisible(!isPopupVisible);\n  };\n\n  const handleOverlayClick = () => {\n    if (isPopupVisible) {\n      return;\n    }\n  };\n\n  useEffect(() => {\n    if (isPopupVisible) {\n      overlayRef.current.addEventListener(\"click\", handleOverlayClick);\n    }\n    return () => {\n      if (overlayRef.current) {\n        overlayRef.current.removeEventListener(\"click\", handleOverlayClick);\n      }\n    };\n  }, [isPopupVisible]);\n\n  async function getChats() {\n    try {\n        const res = await fetch('http://localhost:5000/api/Chats', {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${user.token}`\n        },\n      });\n      if (res.status != 200){\n        const errorMessage = await res.text();\n        alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\n      } else {\n        const data = await res.json();\n        const updatedChats = data.map(chat => ({\n          ...chat,\n          lastMessage: chat.messages && chat.messages.length > 0 ? chat.messages[chat.messages.length - 1] : null\n        }));\n        setFetchedChats(updatedChats);\n        return data;\n      }\n\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  \n\n  \n  return (\n    <div id=\"chats_bar\">\n      <div id=\"chat_bar_line1\">\n        <span id=\"chats_title\">Contacts</span>\n        <span id=\"more_icon\" onClick={handlePopupToggle}>\n          +\n        </span>\n      </div>\n      <div id=\"chats\">\n        {fetchedChats &&\n         fetchedChats.map((chat) => (\n            <Contact\n            key={chat.id}\n            chat={chat}\n            onClick={() => handleChatClick(chat)}\n\n            />\n        ))}\n        {/* Render the popup if exists */}\n        {isPopupVisible && (\n          <div>\n            <div className=\"overlay\" ref={overlayRef}></div>\n            <div id=\"popup\">\n              <div id=\"popup_content\">\n                <p>Add a new contact</p>\n                <span>Name</span>\n                <input\n                  type=\"text\"\n                  value={newContactName}\n                  onChange={(e) => setNewContactName(e.target.value)}\n                />\n                <button id=\"cancel_button\" onClick={() => setPopupVisible(false)}>\n                  Cancel\n                </button>\n                <button id=\"add_button\" onClick={handleAddChat}>\n                  Add\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ContactsBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,OAAO,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,WAAWA,CAAAC,IAAA,EAAmE;EAAAC,EAAA;EAAA,IAAlE;IAAEC,IAAI;IAAEC,YAAY;IAAEC,SAAS;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAAN,IAAA;EACnF,MAAM,CAACO,cAAc,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMkB,UAAU,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAE/BC,SAAS,CAAC,MAAM;IACdiB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeC,aAAaA,CAAA,EAAG;IAC/B,MAAMC,OAAO,GAAG;MAAEC,QAAQ,EAAEN;IAAe,CAAC;IAC1C,MAAMO,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MACzDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASjB,IAAI,CAACkB,KAAM;MACxC,CAAC;MACD,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO;IAChC,CAAC,CAAC;IACF,IAAIE,GAAG,CAACO,MAAM,IAAI,GAAG,EAAC;MACpB,MAAMC,YAAY,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;MACrCC,KAAK,CAACV,GAAG,CAACO,MAAM,GAAG,GAAG,GAAGP,GAAG,CAACW,UAAU,GAAG,IAAI,GAAGH,YAAY,CAAC;IAChE,CAAC,MAAM;MACL,MAAMI,IAAI,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,CAAC;MAC7B,MAAMC,OAAO,GAAG;QACdC,EAAE,EAAEH,IAAI,CAACG,EAAE;QACX7B,IAAI,EACJ;UACE,UAAU,EAAE0B,IAAI,CAAC1B,IAAI,CAACa,QAAQ;UAC9B,aAAa,EAAEa,IAAI,CAAC1B,IAAI,CAAC8B,WAAW;UACpC,YAAY,EAAEJ,IAAI,CAAC1B,IAAI,CAAC+B;QAC1B,CAAC;QACDC,WAAW,EAAE;MACf,CAAC;MACD1B,eAAe,CAAC,KAAK,CAAC;MACtBF,eAAe,CAAE6B,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEL,OAAO,CAAC,CAAC;MACvD1B,SAAS,CAAC0B,OAAO,CAAC;IACpB;IAAC;EACH;EAEA,eAAeM,eAAeA,CAACC,WAAW,EAAE;IAC1C,MAAMN,EAAE,GAAGM,WAAW,CAACN,EAAE;IACzB,MAAMf,GAAG,GAAG,MAAMC,KAAK,CAAE,mCAAkCc,EAAG,EAAC,EAAE;MAC/Db,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASjB,IAAI,CAACkB,KAAM;MACxC;IACF,CAAC,CAAC;IACF,IAAIJ,GAAG,CAACO,MAAM,IAAI,GAAG,EAAC;MACpB,MAAMC,YAAY,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;MACrCC,KAAK,CAACV,GAAG,CAACO,MAAM,GAAG,GAAG,GAAGP,GAAG,CAACW,UAAU,GAAG,IAAI,GAAGH,YAAY,CAAC;IAChE,CAAC,MAAM;MACL,MAAMI,IAAI,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,CAAC;MAC7B1B,YAAY,CAACyB,IAAI,CAAC;IACpB;EACF;EAEA,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC9B9B,eAAe,CAAC,CAACD,cAAc,CAAC;EAClC,CAAC;EAED,MAAMgC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIhC,cAAc,EAAE;MAClB;IACF;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,IAAIY,cAAc,EAAE;MAClBI,UAAU,CAAC6B,OAAO,CAACC,gBAAgB,CAAC,OAAO,EAAEF,kBAAkB,CAAC;IAClE;IACA,OAAO,MAAM;MACX,IAAI5B,UAAU,CAAC6B,OAAO,EAAE;QACtB7B,UAAU,CAAC6B,OAAO,CAACE,mBAAmB,CAAC,OAAO,EAAEH,kBAAkB,CAAC;MACrE;IACF,CAAC;EACH,CAAC,EAAE,CAAChC,cAAc,CAAC,CAAC;EAEpB,eAAeK,QAAQA,CAAA,EAAG;IACxB,IAAI;MACA,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC3DC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASjB,IAAI,CAACkB,KAAM;QACxC;MACF,CAAC,CAAC;MACF,IAAIJ,GAAG,CAACO,MAAM,IAAI,GAAG,EAAC;QACpB,MAAMC,YAAY,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;QACrCC,KAAK,CAACV,GAAG,CAACO,MAAM,GAAG,GAAG,GAAGP,GAAG,CAACW,UAAU,GAAG,IAAI,GAAGH,YAAY,CAAC;MAChE,CAAC,MAAM;QACL,MAAMI,IAAI,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,CAAC;QAC7B,MAAMc,YAAY,GAAGf,IAAI,CAACgB,GAAG,CAACC,IAAI,KAAK;UACrC,GAAGA,IAAI;UACPX,WAAW,EAAEW,IAAI,CAACC,QAAQ,IAAID,IAAI,CAACC,QAAQ,CAACC,MAAM,GAAG,CAAC,GAAGF,IAAI,CAACC,QAAQ,CAACD,IAAI,CAACC,QAAQ,CAACC,MAAM,GAAG,CAAC,CAAC,GAAG;QACrG,CAAC,CAAC,CAAC;QACHzC,eAAe,CAACqC,YAAY,CAAC;QAC7B,OAAOf,IAAI;MACb;IAEF,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF;EAIA,oBACElD,OAAA;IAAKiC,EAAE,EAAC,WAAW;IAAAmB,QAAA,gBACjBpD,OAAA;MAAKiC,EAAE,EAAC,gBAAgB;MAAAmB,QAAA,gBACtBpD,OAAA;QAAMiC,EAAE,EAAC,aAAa;QAAAmB,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtCxD,OAAA;QAAMiC,EAAE,EAAC,WAAW;QAACwB,OAAO,EAAEjB,iBAAkB;QAAAY,QAAA,EAAC;MAEjD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNxD,OAAA;MAAKiC,EAAE,EAAC,OAAO;MAAAmB,QAAA,GACZ7C,YAAY,IACZA,YAAY,CAACuC,GAAG,CAAEC,IAAI,iBACnB/C,OAAA,CAACF,OAAO;QAERiD,IAAI,EAAEA,IAAK;QACXU,OAAO,EAAEA,CAAA,KAAMnB,eAAe,CAACS,IAAI;MAAE,GAFhCA,IAAI,CAACd,EAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACJ,CAAC,EAED/C,cAAc,iBACbT,OAAA;QAAAoD,QAAA,gBACEpD,OAAA;UAAK0D,SAAS,EAAC,SAAS;UAACC,GAAG,EAAE9C;QAAW;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAChDxD,OAAA;UAAKiC,EAAE,EAAC,OAAO;UAAAmB,QAAA,eACbpD,OAAA;YAAKiC,EAAE,EAAC,eAAe;YAAAmB,QAAA,gBACrBpD,OAAA;cAAAoD,QAAA,EAAG;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACxBxD,OAAA;cAAAoD,QAAA,EAAM;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACjBxD,OAAA;cACE4D,IAAI,EAAC,MAAM;cACXC,KAAK,EAAElD,cAAe;cACtBmD,QAAQ,EAAGC,CAAC,IAAKnD,iBAAiB,CAACmD,CAAC,CAACC,MAAM,CAACH,KAAK;YAAE;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpD,CAAC,eACFxD,OAAA;cAAQiC,EAAE,EAAC,eAAe;cAACwB,OAAO,EAAEA,CAAA,KAAM/C,eAAe,CAAC,KAAK,CAAE;cAAA0C,QAAA,EAAC;YAElE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTxD,OAAA;cAAQiC,EAAE,EAAC,YAAY;cAACwB,OAAO,EAAE1C,aAAc;cAAAqC,QAAA,EAAC;YAEhD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrD,EAAA,CAxJQF,WAAW;AAAAgE,EAAA,GAAXhE,WAAW;AA0JpB,eAAeA,WAAW;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}