{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\web developing\\\\exercises\\\\3\\\\Chat-Application\\\\chat\\\\src\\\\sign-in\\\\Sign.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Display from './displayName/Display';\nimport Password from './password/Password';\nimport Image from './image/Image';\nimport Username from './userName/Username';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sign(_ref) {\n  _s();\n  let {\n    users,\n    setUsers\n  } = _ref;\n  const navigate = useNavigate();\n  const [isNameReady, setIsNameReady] = useState(null);\n  const [isPasswordReady, setIsPasswordReady] = useState(null);\n  const [isDisplayReady, setIsDisplayReady] = useState(null);\n  const [name, setName] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [display, setDisplay] = useState(null);\n  const [picture, setPicture] = useState(null);\n  async function handleSubmit(event) {\n    if (isNameReady && isPasswordReady && isDisplayReady) {\n      try {\n        event.preventDefault();\n        const newUser = {\n          userName: name,\n          password: password,\n          display: display,\n          img: picture,\n          registered: \"no\",\n          contacts: []\n        };\n        const res = await fetch('http://localhost:5000/swagger/api/Users', {\n          method: 'post',\n          // send a post request\n          headers: {\n            'Content-Type': 'application/json' // the data (username/password) is in the form of a JSON object\n          },\n\n          'body': JSON.stringify(newUser) // The actual data (username/password)\n        });\n\n        // The server's response is a json object\n        const json = await res.json();\n        if (res.status != 200) alert('Invalid username and/or password');else {\n          navigate('/login'); // Navigate to the LogIn component\n        }\n      } catch (error) {\n        console.error('An error occurred:', error);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patterns sea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      action: \"http://localhost:5000/swagger/api/Users\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        id: \"sign-screen\",\n        children: [/*#__PURE__*/_jsxDEV(Username, {\n          users: users,\n          setIsReady: setIsNameReady,\n          setVal: setName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Password, {\n          setIsReady: setIsPasswordReady,\n          setVal: setPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Display, {\n          users: users,\n          setIsReady: setIsDisplayReady,\n          setVal: setDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          setVal: setPicture\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary screen-foot\",\n            id: \"login\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"screen-foot\",\n            id: \"register\",\n            children: [\"Already registered? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"click here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 35\n            }, this), \" to log-in\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Sign, \"WhbLVRgaOD1+6KjoRWr+ixHjNvc=\", false, function () {\n  return [useNavigate];\n});\n_c = Sign;\nexport default Sign;\nvar _c;\n$RefreshReg$(_c, \"Sign\");","map":{"version":3,"names":["React","useState","Display","Password","Image","Username","Link","useNavigate","jsxDEV","_jsxDEV","Sign","_ref","_s","users","setUsers","navigate","isNameReady","setIsNameReady","isPasswordReady","setIsPasswordReady","isDisplayReady","setIsDisplayReady","name","setName","password","setPassword","display","setDisplay","picture","setPicture","handleSubmit","event","preventDefault","newUser","userName","img","registered","contacts","res","fetch","method","headers","JSON","stringify","json","status","alert","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","action","id","setIsReady","setVal","type","to","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/web developing/exercises/3/Chat-Application/chat/src/sign-in/Sign.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Display from './displayName/Display';\r\nimport Password from './password/Password';\r\nimport Image from './image/Image';\r\nimport Username from './userName/Username';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nfunction Sign({ users, setUsers }) {\r\n  const navigate = useNavigate();\r\n  const [isNameReady, setIsNameReady] = useState(null);\r\n  const [isPasswordReady, setIsPasswordReady] = useState(null);\r\n  const [isDisplayReady, setIsDisplayReady] = useState(null);\r\n\r\n  const [name, setName] = useState(null);\r\n  const [password, setPassword] = useState(null);\r\n  const [display, setDisplay] = useState(null);\r\n  const [picture, setPicture] = useState(null);\r\n\r\n  async function handleSubmit(event) {\r\n    if (isNameReady && isPasswordReady && isDisplayReady) {\r\n      try{\r\n        event.preventDefault();\r\n      const newUser = {\r\n        userName: name,\r\n        password: password,\r\n        display: display,\r\n        img: picture,\r\n        registered: \"no\",\r\n        contacts: []\r\n      };\r\n      const res = await fetch('http://localhost:5000/swagger/api/Users', {\r\nmethod: 'post', // send a post request\r\nheaders: {\r\n'Content-Type': 'application/json', // the data (username/password) is in the form of a JSON object\r\n},\r\n'body': JSON.stringify(newUser) // The actual data (username/password)\r\n});\r\n\r\n// The server's response is a json object\r\nconst json = await res.json()\r\nif (res.status != 200)\r\nalert('Invalid username and/or password')\r\nelse {\r\n  navigate('/login'); // Navigate to the LogIn component\r\n}\r\n\r\n      }catch(error){\r\n        console.error('An error occurred:', error);\r\n      } \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"patterns sea\"></div>\r\n      <form onSubmit={handleSubmit} action=\"http://localhost:5000/swagger/api/Users\">\r\n        <div className=\"container-fluid\" id=\"sign-screen\">\r\n          <Username users={users} setIsReady={setIsNameReady} setVal={setName} />\r\n          <Password setIsReady={setIsPasswordReady} setVal={setPassword} />\r\n          <Display users={users} setIsReady={setIsDisplayReady} setVal={setDisplay} />\r\n          <Image setVal={setPicture} />\r\n          <div>\r\n            <button type=\"submit\" className=\"btn btn-primary screen-foot\" id=\"login\">\r\n              Register\r\n            </button>\r\n            <span className=\"screen-foot\" id=\"register\">\r\n              Already registered? <Link to=\"/login\">click here</Link> to log-in\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sign;\r\n\r\n \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}