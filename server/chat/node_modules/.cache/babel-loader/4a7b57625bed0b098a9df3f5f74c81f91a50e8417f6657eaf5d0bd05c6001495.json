{"ast":null,"code":"var _jsxFileName = \"/home/uri/\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/Ex2/Chat-Application/chat/src/ChatScreen/ContactsBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Contact from \"./Contact.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContactsBar(_ref) {\n  _s();\n  let {\n    user,\n    onChatSelect,\n    onAddChat,\n    fetchedChats,\n    setFetchedChats,\n    getMessages\n  } = _ref;\n  const [isPopupVisible, setPopupVisible] = useState(false);\n  const [newContactName, setNewContactName] = useState(\"\");\n  const overlayRef = useRef(null);\n  useEffect(() => {\n    getChats();\n  }, []);\n  async function getLastMessage(chat) {\n    const messages = await getMessages(chat);\n    if (messages && messages.length > 0) {\n      messages.sort((a, b) => b.id - a.id);\n      return messages[0];\n    }\n    return null;\n  }\n  async function handleAddChat() {\n    const contact = {\n      username: newContactName\n    };\n    const res = await fetch('http://localhost:5000/api/Chats', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      },\n      'body': JSON.stringify(contact)\n    });\n    if (res.status != 200) {\n      const errorMessage = await res.text();\n      alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\n    } else {\n      const data = await res.json();\n      const lastMessage = await getLastMessage(data);\n      console.log(lastMessage);\n      const newChat = {\n        id: data.id,\n        user: {\n          \"username\": data.user.username,\n          \"displayName\": data.user.displayName,\n          \"profilePic\": data.user.profilePic\n        },\n        lastMessage: lastMessage\n      };\n      setPopupVisible(false);\n      setFetchedChats(prevChats => [...prevChats, newChat]);\n      onAddChat(newChat);\n    }\n    ;\n  }\n  async function handleChatClick(clickedChat) {\n    const id = clickedChat.id;\n    const res = await fetch(`http://localhost:5000/api/Chats/${id}`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    if (res.status != 200) {\n      const errorMessage = await res.text();\n      alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\n    } else {\n      const data = await res.json();\n      onChatSelect(data);\n    }\n  }\n  const handlePopupToggle = () => {\n    setPopupVisible(!isPopupVisible);\n  };\n  const handleOverlayClick = () => {\n    if (isPopupVisible) {\n      return;\n    }\n  };\n  useEffect(() => {\n    if (isPopupVisible) {\n      overlayRef.current.addEventListener(\"click\", handleOverlayClick);\n    }\n    return () => {\n      if (overlayRef.current) {\n        overlayRef.current.removeEventListener(\"click\", handleOverlayClick);\n      }\n    };\n  }, [isPopupVisible]);\n  async function getChats() {\n    try {\n      const res = await fetch('http://localhost:5000/api/Chats', {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${user.token}`\n        }\n      });\n      if (res.status != 200) {\n        const errorMessage = await res.text();\n        alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\n      } else {\n        const data = await res.json();\n        console.log(data);\n        const lastMessage = await getLastMessage(data);\n        const updatedChats = data.map(chat => ({\n          ...chat,\n          lastMessage: lastMessage\n        }));\n        setFetchedChats(updatedChats);\n        return data;\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chats_bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat_bar_line1\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"chats_title\",\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"more_icon\",\n        onClick: handlePopupToggle,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chats\",\n      children: [fetchedChats && fetchedChats.map(chat => /*#__PURE__*/_jsxDEV(Contact, {\n        chat: chat,\n        onClick: () => handleChatClick(chat)\n      }, chat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)), isPopupVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          ref: overlayRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"popup\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"popup_content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Add a new contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newContactName,\n              onChange: e => setNewContactName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"cancel_button\",\n              onClick: () => setPopupVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"add_button\",\n              onClick: handleAddChat,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(ContactsBar, \"L59jSV3nefkzuMLP+7q05GH2oDQ=\");\n_c = ContactsBar;\nexport default ContactsBar;\nvar _c;\n$RefreshReg$(_c, \"ContactsBar\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Contact","jsxDEV","_jsxDEV","ContactsBar","_ref","_s","user","onChatSelect","onAddChat","fetchedChats","setFetchedChats","getMessages","isPopupVisible","setPopupVisible","newContactName","setNewContactName","overlayRef","getChats","getLastMessage","chat","messages","length","sort","a","b","id","handleAddChat","contact","username","res","fetch","method","headers","token","JSON","stringify","status","errorMessage","text","alert","statusText","data","json","lastMessage","console","log","newChat","displayName","profilePic","prevChats","handleChatClick","clickedChat","handlePopupToggle","handleOverlayClick","current","addEventListener","removeEventListener","updatedChats","map","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","ref","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/uri/שולחן העבודה/Ex2/Chat-Application/chat/src/ChatScreen/ContactsBar.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport Contact from \"./Contact.js\";\n\nfunction ContactsBar({ user, onChatSelect, onAddChat, fetchedChats, setFetchedChats, getMessages }) {\n  const [isPopupVisible, setPopupVisible] = useState(false);\n  const [newContactName, setNewContactName] = useState(\"\");\n  const overlayRef = useRef(null);\n\n  useEffect(() => {\n    getChats();\n  }, []);\n\n  async function getLastMessage(chat) {\n    const messages = await getMessages(chat);\n    if (messages && messages.length > 0) {\n      messages.sort((a, b) => b.id - a.id);\n      return messages[0];\n    }\n    return null;\n  }\n\n  async function handleAddChat() {\n  const contact = { username: newContactName };\n    const res = await fetch('http://localhost:5000/api/Chats', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      },\n      'body': JSON.stringify(contact)\n    });\n    if (res.status != 200){\n      const errorMessage = await res.text();\n      alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\n    } else {\n      const data = await res.json();\n      const lastMessage = await getLastMessage(data);\n      console.log(lastMessage);\n      const newChat = {\n        id: data.id,\n        user:\n        {\n          \"username\": data.user.username,\n          \"displayName\": data.user.displayName,\n          \"profilePic\": data.user.profilePic\n        },\n        lastMessage: lastMessage\n      }\n      setPopupVisible(false);\n      setFetchedChats((prevChats) => [...prevChats, newChat]);\n      onAddChat(newChat);\n    };\n  }\n\n  async function handleChatClick(clickedChat) {\n    const id = clickedChat.id;\n    const res = await fetch(`http://localhost:5000/api/Chats/${id}`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      },\n    });\n    if (res.status != 200){\n      const errorMessage = await res.text();\n      alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\n    } else {\n      const data = await res.json();\n      onChatSelect(data);\n    }\n  }\n\n  const handlePopupToggle = () => {\n    setPopupVisible(!isPopupVisible);\n  };\n\n  const handleOverlayClick = () => {\n    if (isPopupVisible) {\n      return;\n    }\n  };\n\n  useEffect(() => {\n    if (isPopupVisible) {\n      overlayRef.current.addEventListener(\"click\", handleOverlayClick);\n    }\n    return () => {\n      if (overlayRef.current) {\n        overlayRef.current.removeEventListener(\"click\", handleOverlayClick);\n      }\n    };\n  }, [isPopupVisible]);\n\n  async function getChats() {\n    try {\n        const res = await fetch('http://localhost:5000/api/Chats', {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${user.token}`\n        },\n      });\n      if (res.status != 200){\n        const errorMessage = await res.text();\n        alert(res.status + \" \" + res.statusText + \"\\n\" + errorMessage);\n      } else {\n        const data = await res.json();\n        console.log(data);\n        const lastMessage = await getLastMessage(data);\n        const updatedChats = data.map(chat => ({\n          ...chat,\n          lastMessage: lastMessage\n        }));\n        setFetchedChats(updatedChats);\n        return data;\n      }\n\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  \n\n  \n  return (\n    <div id=\"chats_bar\">\n      <div id=\"chat_bar_line1\">\n        <span id=\"chats_title\">Contacts</span>\n        <span id=\"more_icon\" onClick={handlePopupToggle}>\n          +\n        </span>\n      </div>\n      <div id=\"chats\">\n        {fetchedChats &&\n         fetchedChats.map((chat) => (\n            <Contact\n            key={chat.id}\n            chat={chat}\n            onClick={() => handleChatClick(chat)}\n\n            />\n        ))}\n        {/* Render the popup if exists */}\n        {isPopupVisible && (\n          <div>\n            <div className=\"overlay\" ref={overlayRef}></div>\n            <div id=\"popup\">\n              <div id=\"popup_content\">\n                <p>Add a new contact</p>\n                <span>Name</span>\n                <input\n                  type=\"text\"\n                  value={newContactName}\n                  onChange={(e) => setNewContactName(e.target.value)}\n                />\n                <button id=\"cancel_button\" onClick={() => setPopupVisible(false)}>\n                  Cancel\n                </button>\n                <button id=\"add_button\" onClick={handleAddChat}>\n                  Add\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ContactsBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}